<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="_gabor_blob_extractor_8cpp" kind="file">
    <compoundname>GaborBlobExtractor.cpp</compoundname>
    <includes refid="stdafx_8h" local="yes">stdafx.h</includes>
    <includes refid="_gabor_blob_extractor_8h" local="yes">GaborBlobExtractor.h</includes>
    <includes refid="_gabor_blob_feature_8h" local="yes">GaborBlobFeature.h</includes>
    <includes refid="_d_image_8h" local="yes">DImage.h</includes>
    <includes refid="_otsu_binarizer_8h" local="yes">OtsuBinarizer.h</includes>
    <includes refid="_binary_component_extractor_8h" local="yes">BinaryComponentExtractor.h</includes>
    <incdepgraph>
      <node id="378">
        <label>opencv/cv.h</label>
      </node>
      <node id="388">
        <label>BinaryComponentExtractor.h</label>
        <link refid="_binary_component_extractor_8h"/>
        <childnode refid="377" relation="include">
        </childnode>
      </node>
      <node id="380">
        <label>ConnectedComponent.h</label>
        <link refid="_connected_component_8h"/>
        <childnode refid="370" relation="include">
        </childnode>
        <childnode refid="368" relation="include">
        </childnode>
        <childnode refid="381" relation="include">
        </childnode>
      </node>
      <node id="361">
        <label>SDKDDKVer.h</label>
      </node>
      <node id="358">
        <label>ManuscriptApp/GaborBlobExtractor.cpp</label>
        <link refid="GaborBlobExtractor.cpp"/>
        <childnode refid="359" relation="include">
        </childnode>
        <childnode refid="364" relation="include">
        </childnode>
        <childnode refid="385" relation="include">
        </childnode>
        <childnode refid="369" relation="include">
        </childnode>
        <childnode refid="387" relation="include">
        </childnode>
        <childnode refid="388" relation="include">
        </childnode>
      </node>
      <node id="379">
        <label>opencv2/core/core.hpp</label>
      </node>
      <node id="375">
        <label>ImageConverter.h</label>
        <link refid="_image_converter_8h"/>
        <childnode refid="365" relation="include">
        </childnode>
        <childnode refid="372" relation="include">
        </childnode>
      </node>
      <node id="364">
        <label>GaborBlobExtractor.h</label>
        <link refid="_gabor_blob_extractor_8h"/>
        <childnode refid="365" relation="include">
        </childnode>
        <childnode refid="366" relation="include">
        </childnode>
        <childnode refid="380" relation="include">
        </childnode>
        <childnode refid="383" relation="include">
        </childnode>
        <childnode refid="385" relation="include">
        </childnode>
      </node>
      <node id="368">
        <label>string</label>
      </node>
      <node id="377">
        <label>ComponentExtractor.h</label>
        <link refid="_component_extractor_8h"/>
        <childnode refid="378" relation="include">
        </childnode>
        <childnode refid="379" relation="include">
        </childnode>
        <childnode refid="380" relation="include">
        </childnode>
      </node>
      <node id="381">
        <label>Contour.h</label>
        <link refid="_contour_8h"/>
        <childnode refid="370" relation="include">
        </childnode>
        <childnode refid="365" relation="include">
        </childnode>
        <childnode refid="382" relation="include">
        </childnode>
      </node>
      <node id="385">
        <label>GaborBlobFeature.h</label>
        <link refid="_gabor_blob_feature_8h"/>
        <childnode refid="365" relation="include">
        </childnode>
        <childnode refid="386" relation="include">
        </childnode>
        <childnode refid="384" relation="include">
        </childnode>
      </node>
      <node id="365">
        <label>opencv\cv.h</label>
      </node>
      <node id="374">
        <label>ImageEnhancer.h</label>
        <link refid="_image_enhancer_8h"/>
        <childnode refid="365" relation="include">
        </childnode>
        <childnode refid="372" relation="include">
        </childnode>
      </node>
      <node id="359">
        <label>stdafx.h</label>
        <link refid="stdafx_8h"/>
        <childnode refid="360" relation="include">
        </childnode>
        <childnode refid="362" relation="include">
        </childnode>
        <childnode refid="363" relation="include">
        </childnode>
      </node>
      <node id="384">
        <label>Feature.h</label>
        <link refid="_feature_8h"/>
      </node>
      <node id="386">
        <label>opencv\ml.h</label>
      </node>
      <node id="387">
        <label>OtsuBinarizer.h</label>
        <link refid="_otsu_binarizer_8h"/>
        <childnode refid="373" relation="include">
        </childnode>
      </node>
      <node id="370">
        <label>vector</label>
      </node>
      <node id="383">
        <label>FeatureExtractor.h</label>
        <link refid="_feature_extractor_8h"/>
        <childnode refid="378" relation="include">
        </childnode>
        <childnode refid="379" relation="include">
        </childnode>
        <childnode refid="384" relation="include">
        </childnode>
      </node>
      <node id="376">
        <label>ImageProjector.h</label>
        <link refid="_image_projector_8h"/>
        <childnode refid="365" relation="include">
        </childnode>
        <childnode refid="372" relation="include">
        </childnode>
      </node>
      <node id="367">
        <label>opencv2/highgui/highgui.hpp</label>
      </node>
      <node id="369">
        <label>DImage.h</label>
        <link refid="_d_image_8h"/>
        <childnode refid="365" relation="include">
        </childnode>
        <childnode refid="367" relation="include">
        </childnode>
        <childnode refid="370" relation="include">
        </childnode>
        <childnode refid="371" relation="include">
        </childnode>
        <childnode refid="373" relation="include">
        </childnode>
        <childnode refid="374" relation="include">
        </childnode>
        <childnode refid="375" relation="include">
        </childnode>
        <childnode refid="376" relation="include">
        </childnode>
        <childnode refid="377" relation="include">
        </childnode>
        <childnode refid="383" relation="include">
        </childnode>
      </node>
      <node id="366">
        <label>ImageTools.h</label>
        <link refid="_image_tools_8h"/>
        <childnode refid="365" relation="include">
        </childnode>
        <childnode refid="367" relation="include">
        </childnode>
        <childnode refid="368" relation="include">
        </childnode>
        <childnode refid="369" relation="include">
        </childnode>
      </node>
      <node id="363">
        <label>tchar.h</label>
      </node>
      <node id="371">
        <label>ImageFilter.h</label>
        <link refid="_image_filter_8h"/>
        <childnode refid="372" relation="include">
        </childnode>
      </node>
      <node id="360">
        <label>targetver.h</label>
        <link refid="targetver_8h"/>
        <childnode refid="361" relation="include">
        </childnode>
      </node>
      <node id="362">
        <label>stdio.h</label>
      </node>
      <node id="372">
        <label>imageoperator.h</label>
        <link refid="_image_operator_8h"/>
        <childnode refid="365" relation="include">
        </childnode>
      </node>
      <node id="382">
        <label>opencv2\core\core.hpp</label>
      </node>
      <node id="373">
        <label>ImageBinarizer.h</label>
        <link refid="_image_binarizer_8h"/>
        <childnode refid="365" relation="include">
        </childnode>
        <childnode refid="372" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stdafx_8h" kindref="compound">stdafx.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_gabor_blob_extractor_8h" kindref="compound">GaborBlobExtractor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_gabor_blob_feature_8h" kindref="compound">GaborBlobFeature.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_d_image_8h" kindref="compound">DImage.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_otsu_binarizer_8h" kindref="compound">OtsuBinarizer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_binary_component_extractor_8h" kindref="compound">BinaryComponentExtractor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Task<sp/>Replace<sp/>the<sp/>binadry<sp/>blob<sp/>image<sp/>(pixels)<sp/>by<sp/>the<sp/>pixels<sp/>from<sp/>the<sp/>original<sp/>response<sp/>(32bit)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><ref refid="class_gabor_blob_feature" kindref="compound">GaborBlobFeature</ref>*<sp/><ref refid="class_gabor_blob_extractor_1a9f332a64eaa87a97cd48fbc34a5a58da" kindref="member">GaborBlobExtractor::getComponentFeature</ref>(<ref refid="class_connected_component" kindref="compound">ConnectedComponent</ref>*<sp/>component){</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_gabor_blob_feature" kindref="compound">GaborBlobFeature</ref>*<sp/>feature<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_gabor_blob_feature" kindref="compound">GaborBlobFeature</ref>();</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>feature-&gt;<ref refid="class_gabor_blob_feature_1a9494cf854702bf93ef07f169cbd65b01" kindref="member">setBlob</ref>(component-&gt;<ref refid="class_connected_component_1ad25f944f3627225427501c1a1cd7dc45" kindref="member">getImage</ref>());</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>feature<sp/>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_gabor_blob_extractor_1a8111b21c0587c91e53267bdcef9b1882" kindref="member">GaborBlobExtractor::processResponse</ref>(Mat&amp;<sp/>response,<sp/>vector&lt;Feature*&gt;&amp;<sp/>list){</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*//[Jihad]<sp/>Feature*<sp/>feature<sp/>;</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>define<sp/>gray<sp/>(8<sp/>bit)<sp/>mat<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/><sp/>Mat<sp/>responseByte(response.rows,<sp/>response.cols,<sp/>CV_8U);<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>convert<sp/>the<sp/>input<sp/>image<sp/>to<sp/>8bit<sp/>gray<sp/>scale<sp/></highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/><sp/><sp/>response.convertTo(responseByte,<sp/>CV_8U);</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>create<sp/>DImage<sp/>class<sp/>of<sp/>the<sp/>gray<sp/>scale<sp/>image</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/><sp/><sp/>DImage<sp/>img(responseByte);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>DImage<sp/>class<sp/>of<sp/>the<sp/>response<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_d_image" kindref="compound">DImage</ref><sp/>img(response);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>the<sp/>input<sp/>DImage<sp/>to<sp/>8bit<sp/>gray<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_d_image" kindref="compound">DImage</ref><sp/>*responseByte<sp/>=<sp/>img.<ref refid="class_d_image_1af91df7fb4ff6ee2ff5d040bd5ae4356c" kindref="member">convert</ref>(<ref refid="class_d_image_1ac2aef108a618db6d3e04924510ba9f35" kindref="member">DImage::DIFORMAT_GRAY</ref>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;ConnectedComponent*&gt;<sp/>component_list<sp/>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>the<sp/>gray<sp/>scale<sp/>image<sp/>to<sp/>bindary<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_otsu_binarizer" kindref="compound">OtsuBinarizer</ref><sp/>binarizer;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_d_image" kindref="compound">DImage</ref>*<sp/>bin_img<sp/>=<sp/>responseByte-&gt;<ref refid="class_d_image_1aabf5c54bbdfdfb7cde2aca18452d5ef1" kindref="member">binarize</ref>(binarizer);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Extarct<sp/>the<sp/>connected<sp/>components<sp/>from<sp/>the<sp/>binary<sp/>image<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_binary_component_extractor" kindref="compound">BinaryComponentExtractor</ref><sp/>component_extractor;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>bin_img-&gt;<ref refid="class_d_image_1a4a60efb2e91c9a07a4d8f37b9bc4d086" kindref="member">extractComponents</ref>(component_extractor,<sp/>component_list);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>component_list.size()<sp/>;<sp/>i++){</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_gabor_blob_feature" kindref="compound">GaborBlobFeature</ref>*<sp/>feature<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_gabor_blob_feature" kindref="compound">GaborBlobFeature</ref>();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Task<sp/>Replace<sp/>the<sp/>binadry<sp/>blob<sp/>image<sp/>(pixels)<sp/>by<sp/>the<sp/>pixels<sp/>from<sp/>the<sp/>original<sp/>response<sp/>(32bit)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mat<sp/>roi(response,<sp/>component_list[i]-&gt;getBoundRect());</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature-&gt;<ref refid="class_gabor_blob_feature_1a9494cf854702bf93ef07f169cbd65b01" kindref="member">setBlob</ref>(roi);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list.push_back(feature);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_gabor_blob_extractor_1aff19b47162d8d4244ac9325b82f1de4f" kindref="member">GaborBlobExtractor::extract</ref>(vector&lt;Feature*&gt;&amp;<sp/>list){</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>win_name[32]<sp/>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;Mat&gt;<sp/>channels;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>Mat<sp/><sp/><sp/><sp/>mix,<sp/>viz<sp/>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>orientationStep<sp/>=<sp/>180.0/_numOrientation<sp/>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>_curOrientation<sp/>=<sp/>0<sp/>;<sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>Orientations:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>_numOrientation<sp/>&lt;&lt;<sp/>endl<sp/>;<sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>_numOrientation<sp/>;<sp/>i++<sp/>){</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mat<sp/>response,<sp/>rdisp<sp/>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(win_name,<sp/></highlight><highlight class="stringliteral">&quot;%d:<sp/>%4.2f&quot;</highlight><highlight class="normal">,i,<sp/>_curOrientation);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mat<sp/>gaborKernel<sp/>=<sp/>cv::getGaborKernel(_kernelSize,_envelopeSigma,_curOrientation,_wavelength,_aspectRatio,0.0,CV_32F);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::filter2D(<ref refid="class_feature_extractor_1a56fefb5d4a1d14aef973442b4bf47a62" kindref="member">_image</ref>,<sp/>response,<sp/>CV_32F,<sp/>gaborKernel);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response.convertTo(rdisp,<sp/>CV_8U);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channels.push_back(rdisp);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_image_tools_1a45492e740afde5d3482a71d5cee9842b" kindref="member">ImageTools::display</ref>(win_name,<sp/>rdisp);<sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_gabor_blob_extractor_1a8111b21c0587c91e53267bdcef9b1882" kindref="member">processResponse</ref>(response,<sp/>list);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Features:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>list.size()<sp/>&lt;&lt;<sp/>endl<sp/>;<sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_curOrientation<sp/>+=<sp/>orientationStep<sp/>;<sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>merge(channels,<sp/>mix);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>mix.convertTo(viz,<sp/>CV_8UC3);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ImageTools::display(&quot;Final&quot;,<sp/>mix);<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/roykalony/Documents/workspace/manuscript-project/manuscriptvc/ManuscriptApp/GaborBlobExtractor.cpp"/>
  </compounddef>
</doxygen>
