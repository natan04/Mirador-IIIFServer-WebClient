<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="_contour_8cpp" kind="file">
    <compoundname>Contour.cpp</compoundname>
    <includes refid="stdafx_8h" local="yes">stdafx.h</includes>
    <includes refid="_contour_8h" local="yes">Contour.h</includes>
    <incdepgraph>
      <node id="184">
        <label>SDKDDKVer.h</label>
      </node>
      <node id="187">
        <label>Contour.h</label>
        <link refid="_contour_8h"/>
        <childnode refid="188" relation="include">
        </childnode>
        <childnode refid="189" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
      </node>
      <node id="189">
        <label>opencv\cv.h</label>
      </node>
      <node id="182">
        <label>stdafx.h</label>
        <link refid="stdafx_8h"/>
        <childnode refid="183" relation="include">
        </childnode>
        <childnode refid="185" relation="include">
        </childnode>
        <childnode refid="186" relation="include">
        </childnode>
      </node>
      <node id="188">
        <label>vector</label>
      </node>
      <node id="181">
        <label>ManuscriptApp/Contour.cpp</label>
        <link refid="Contour.cpp"/>
        <childnode refid="182" relation="include">
        </childnode>
        <childnode refid="187" relation="include">
        </childnode>
      </node>
      <node id="186">
        <label>tchar.h</label>
      </node>
      <node id="183">
        <label>targetver.h</label>
        <link refid="targetver_8h"/>
        <childnode refid="184" relation="include">
        </childnode>
      </node>
      <node id="185">
        <label>stdio.h</label>
      </node>
      <node id="190">
        <label>opencv2\core\core.hpp</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stdafx_8h" kindref="compound">stdafx.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_contour_8h" kindref="compound">Contour.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_contour_1a866591bd98e4ebdbd511eb43ef511fd3" kindref="member">Contour::setCenter</ref>()<sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_contour_1a60351d0013e44e0ea12b8c2f227b2d74" kindref="member">_center</ref>.x<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_contour_1a60351d0013e44e0ea12b8c2f227b2d74" kindref="member">_center</ref>.y<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;Point&gt;::iterator<sp/>iter<sp/>;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>iter<sp/>=<sp/><ref refid="class_contour_1a5fe5723655cd3e3a1e40a433565ed9f7" kindref="member">_points</ref>.begin()<sp/>;<sp/>iter<sp/>!=<sp/><ref refid="class_contour_1a5fe5723655cd3e3a1e40a433565ed9f7" kindref="member">_points</ref>.end();<sp/>iter++<sp/>){</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_contour_1a60351d0013e44e0ea12b8c2f227b2d74" kindref="member">_center</ref>.x<sp/>+=<sp/>(*iter).x<sp/>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_contour_1a60351d0013e44e0ea12b8c2f227b2d74" kindref="member">_center</ref>.y<sp/>+=<sp/>(*iter).y<sp/>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_contour_1a60351d0013e44e0ea12b8c2f227b2d74" kindref="member">_center</ref>.x<sp/>/=<sp/><ref refid="class_contour_1a5fe5723655cd3e3a1e40a433565ed9f7" kindref="member">_points</ref>.size()<sp/>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_contour_1a60351d0013e44e0ea12b8c2f227b2d74" kindref="member">_center</ref>.y<sp/>/=<sp/><ref refid="class_contour_1a5fe5723655cd3e3a1e40a433565ed9f7" kindref="member">_points</ref>.size()<sp/>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal">Mat<sp/><ref refid="class_contour_1af6da2b9bb1d742b35fb9c2c11f7b1dbe" kindref="member">Contour::getMat</ref>(vector&lt;Point&gt;&amp;<sp/>pts){</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>Mat<sp/>m((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(pts.size()),<sp/>2,<sp/>CV_64F);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;Point&gt;::iterator<sp/>iter<sp/>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(iter<sp/>=<sp/>pts.begin()<sp/>;<sp/>iter<sp/>!=<sp/>pts.end();<sp/>iter++,<sp/>row++<sp/>){</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(row,<sp/>0)<sp/>=<sp/>(*iter).x<sp/>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.at&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(row,<sp/>1)<sp/>=<sp/>(*iter).y<sp/>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m<sp/>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_contour_1ad07917ec771f6c5df764fdeac7841613" kindref="member">Contour::setOrientation</ref>(){</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>points<sp/>to<sp/>mat<sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>Mat<sp/>pts<sp/>=<sp/><ref refid="class_contour_1af6da2b9bb1d742b35fb9c2c11f7b1dbe" kindref="member">getMat</ref>(<ref refid="class_contour_1a5fe5723655cd3e3a1e40a433565ed9f7" kindref="member">_points</ref>);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>Mat<sp/>cov(2,2,CV_64F);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>Mat<sp/>mean(2,2,CV_64F);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>Mat<sp/>value(2,2,<sp/>CV_64F);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>Mat<sp/>vects(2,2,<sp/>CV_64F);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>calcCovarMatrix(pts,<sp/>cov,<sp/>mean,<sp/>CV_COVAR_NORMAL|CV_COVAR_ROWS);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>eigen(cov,<sp/>value,<sp/>vects);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_contour_1a946768dfb1a6b340165360db2bf279db" kindref="member">_orientation</ref>.first<sp/><sp/>=<sp/>Point2f(vects.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(0,0),<sp/>vects.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(0,1))<sp/>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_contour_1a946768dfb1a6b340165360db2bf279db" kindref="member">_orientation</ref>.second<sp/>=<sp/>Point2f(vects.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(1,0),<sp/>vects.at&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(1,1))<sp/>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//_orientation.first<sp/><sp/>=<sp/>Point2d(vects.at&lt;double&gt;(0,0),<sp/>vects.at&lt;double&gt;(0,1))<sp/>*<sp/>sqrt(value.at&lt;double&gt;(0,0));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//_orientation.second<sp/>=<sp/>Point2d(vects.at&lt;double&gt;(1,0),<sp/>vects.at&lt;double&gt;(1,1))<sp/>*<sp/>sqrt(value.at&lt;double&gt;(1,0));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout<sp/>&lt;&lt;<sp/>&quot;First:<sp/>&quot;&lt;&lt;<sp/>_orientation.first<sp/>&lt;&lt;<sp/>&quot;<sp/><sp/>Second:<sp/>&quot;<sp/>&lt;&lt;<sp/>_orientation.second<sp/>&lt;&lt;<sp/>endl<sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_contour_1ac3b85c445a9a648ebec59fdd2413194d" kindref="member">Contour::setBoundRect</ref>(){</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;Point&gt;::iterator<sp/>iter<sp/>=<sp/><ref refid="class_contour_1a5fe5723655cd3e3a1e40a433565ed9f7" kindref="member">_points</ref>.begin()<sp/>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>Point<sp/>min<sp/>=<sp/>(*iter)<sp/>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>Point<sp/>max<sp/>=<sp/>(*iter)<sp/>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>iter<sp/>!=<sp/><ref refid="class_contour_1a5fe5723655cd3e3a1e40a433565ed9f7" kindref="member">_points</ref>.end()<sp/>){</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(*iter).x<sp/>&lt;<sp/>min.x<sp/>)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min.x<sp/>=<sp/>(*iter).x<sp/>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(*iter).x<sp/><sp/>&gt;<sp/>max.x<sp/>)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max.x<sp/>=<sp/>(*iter).x<sp/>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(*iter).y<sp/>&lt;<sp/>min.y<sp/>)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min.y<sp/>=<sp/>(*iter).y<sp/>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(*iter).y<sp/><sp/>&gt;<sp/>max.y<sp/>)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max.y<sp/>=<sp/>(*iter).y<sp/>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter++<sp/>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_contour_1aefe73b0c7479e0a6bca7c76e5cc4aa6d" kindref="member">_brect</ref>.x<sp/>=<sp/>min.x<sp/>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_contour_1aefe73b0c7479e0a6bca7c76e5cc4aa6d" kindref="member">_brect</ref>.y<sp/>=<sp/>min.y<sp/>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_contour_1aefe73b0c7479e0a6bca7c76e5cc4aa6d" kindref="member">_brect</ref>.height<sp/>=<sp/>max.y<sp/>-<sp/>min.y<sp/>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_contour_1aefe73b0c7479e0a6bca7c76e5cc4aa6d" kindref="member">_brect</ref>.width<sp/><sp/>=<sp/>max.x<sp/>-<sp/>min.x<sp/>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_contour_1a6c162802a4123888526f43561e7584f5" kindref="member">Contour::getArea</ref>(){</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>Point<sp/>p<sp/>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>p.x<sp/>=<sp/><ref refid="class_contour_1aefe73b0c7479e0a6bca7c76e5cc4aa6d" kindref="member">_brect</ref>.x<sp/>+<sp/><ref refid="class_contour_1aefe73b0c7479e0a6bca7c76e5cc4aa6d" kindref="member">_brect</ref>.width/2<sp/>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>p.y<sp/>=<sp/><ref refid="class_contour_1aefe73b0c7479e0a6bca7c76e5cc4aa6d" kindref="member">_brect</ref>.y<sp/>+<sp/><ref refid="class_contour_1aefe73b0c7479e0a6bca7c76e5cc4aa6d" kindref="member">_brect</ref>.height/2<sp/>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>Point<sp/>u,<sp/>v<sp/>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>area<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/><ref refid="class_contour_1a5fe5723655cd3e3a1e40a433565ed9f7" kindref="member">_points</ref>.size()<sp/>-<sp/>1;<sp/>i++<sp/>){</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u<sp/>=<sp/><ref refid="class_contour_1a5fe5723655cd3e3a1e40a433565ed9f7" kindref="member">_points</ref>[i]<sp/>-<sp/>p<sp/><sp/>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/><ref refid="class_contour_1a5fe5723655cd3e3a1e40a433565ed9f7" kindref="member">_points</ref>[i+1]<sp/>-<sp/>p<sp/>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>area<sp/>+=<sp/>u.x<sp/>*<sp/>v.y<sp/>-<sp/>u.y<sp/>*<sp/>v.x<sp/>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>u<sp/>=<sp/><ref refid="class_contour_1a5fe5723655cd3e3a1e40a433565ed9f7" kindref="member">_points</ref>[<ref refid="class_contour_1a5fe5723655cd3e3a1e40a433565ed9f7" kindref="member">_points</ref>.size()-1]<sp/>-<sp/>p<sp/><sp/>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>v<sp/>=<sp/><ref refid="class_contour_1a5fe5723655cd3e3a1e40a433565ed9f7" kindref="member">_points</ref>[0]<sp/>-<sp/>p<sp/>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>area<sp/>+=<sp/>u.x<sp/>*<sp/>v.y<sp/>-<sp/>u.y<sp/>*<sp/>v.x<sp/>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>area<sp/>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_contour_1ac36273da0f11bf3095087f26ca3c6440" kindref="member">Contour::drawOnImage</ref>(Mat<sp/>mat,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>value){</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;Point&gt;::iterator<sp/>iter<sp/>=<sp/><ref refid="class_contour_1a5fe5723655cd3e3a1e40a433565ed9f7" kindref="member">_points</ref>.begin()<sp/>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>iter<sp/>!=<sp/><ref refid="class_contour_1a5fe5723655cd3e3a1e40a433565ed9f7" kindref="member">_points</ref>.end()<sp/>){</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat.at&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">&gt;(*iter)<sp/>=<sp/>value<sp/>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter++<sp/>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_contour_1a29fab9bc4b308e3230172bda77650a72" kindref="member">Contour::getImportance</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i){</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Point<sp/>vp<sp/>=<sp/><ref refid="class_contour_1a5fe5723655cd3e3a1e40a433565ed9f7" kindref="member">_points</ref>[i-1]<sp/>-<sp/><ref refid="class_contour_1a5fe5723655cd3e3a1e40a433565ed9f7" kindref="member">_points</ref>[i]<sp/><sp/>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Point<sp/>vn<sp/>=<sp/>_points[i+1]<sp/>-<sp/>_points[i]<sp/>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)abs(vp.x<sp/>*<sp/>vn.y<sp/>-<sp/>vp.y<sp/>*<sp/>vn.x<sp/>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_contour_1a89afece7e3b513654cee39410ed57e86" kindref="member">Contour::getLeastImportant</ref>(){</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>min_idx<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>min_val<sp/>=<sp/><ref refid="class_contour_1a29fab9bc4b308e3230172bda77650a72" kindref="member">getImportance</ref>(0)<sp/>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1<sp/>;<sp/>i<sp/>&lt;<sp/>_points.size()<sp/>;<sp/>i++<sp/>){</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val<sp/>=<sp/><ref refid="class_contour_1a29fab9bc4b308e3230172bda77650a72" kindref="member">getImportance</ref>(i)<sp/>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>val<sp/>&lt;<sp/>min_val<sp/>){</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_idx<sp/>=<sp/>i<sp/>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_val<sp/>=<sp/>val<sp/>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>min_idx<sp/>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_contour_1a1d45bb2a1ca97b4fa9418f9c43318f2a" kindref="member">Contour::removeVertex</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i){</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>_points.erase(_points.begin()<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_contour_1a3f30ccff7776c7aacae37145df5da467" kindref="member">Contour::removeLeastImportant</ref>(){</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vert_idx<sp/>=<sp/><ref refid="class_contour_1a89afece7e3b513654cee39410ed57e86" kindref="member">getLeastImportant</ref>();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>_points.erase(_points.begin()<sp/>+<sp/>vert_idx);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vert_idx<sp/>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/roykalony/Documents/workspace/manuscript-project/manuscriptvc/ManuscriptApp/Contour.cpp"/>
  </compounddef>
</doxygen>
